{"mappings":"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","sources":["src/index.js"],"sourcesContent":["export default class ShapeOverlays {\r\n\tstatic registerGSAP(gsap) {\r\n\t\tShapeOverlays.gsap = gsap\r\n\t}\r\n\r\n\tconstructor(options = {}) {\r\n\t\tconst {\r\n\t\t\tsvgClassName,\r\n\t\t\tpathClassName,\r\n\t\t\tnumberPoints = 4,\r\n\t\t\tdelayPoints = 0.3,\r\n\t\t\tdelayPaths = 0.25,\r\n\t\t\tduration = 1,\r\n\t\t\tease = 'none'\r\n\t\t} = options\r\n\r\n\t\tthis.gsap = ShapeOverlays.gsap || window.gsap\r\n\r\n\t\tthis.svg = document.querySelector(`${svgClassName}`)\r\n\t\tthis.path = [...(this.svg?.querySelectorAll(`${pathClassName}`) || [])]\r\n\t\tthis.numberPoints = numberPoints\r\n\t\tthis.numberPaths = this.path.length\r\n\t\tthis.delayPoints = delayPoints\r\n\t\tthis.delayPaths = delayPaths\r\n\t\tthis.duration = duration\r\n\t\tthis.ease = ease\r\n\t\tthis.isOpened = false\r\n\t\tthis.pointsDelay = []\r\n\t\tthis.allPoints = []\r\n\t\tthis.tl = this.gsap.timeline({\r\n\t\t\tonUpdate: this.render,\r\n\t\t\tdefaults: {\r\n\t\t\t\tease: this.ease,\r\n\t\t\t\tduration: this.duration\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!this.svg) return\r\n\r\n\t\tthis.svg.classList.add(`${svgClassName.replace(/\\./g, '')}--initialize`)\r\n\r\n\t\tthis.paths()\r\n\t}\r\n\r\n\ttotalDuration() {\r\n\t\treturn Math.round(this.tl.totalDuration() * 1000)\r\n\t}\r\n\r\n\tpaths() {\r\n\t\tthis.allPoints = []\r\n\r\n\t\tfor (const path of this.path) {\r\n\t\t\tconst points = []\r\n\r\n\t\t\tfor (const j of Array(this.numberPoints).keys()) {\r\n\t\t\t\tpoints.push(100)\r\n\t\t\t}\r\n\r\n\t\t\tthis.allPoints.push(points)\r\n\t\t}\r\n\t}\r\n\r\n\trender = () => {\r\n\t\tthis.path.map((path, i) => {\r\n\t\t\tconst points = this.allPoints[i]\r\n\t\t\tlet d = ''\r\n\r\n\t\t\td += this.isOpened ? `M 0 0 V ${points[0]} C` : `M 0 ${points[0]} C`\r\n\r\n\t\t\tlet j = 0\r\n\t\t\tfor (const point of points.slice(0, this.numberPoints - 1)) {\r\n\t\t\t\tlet p = (j + 1) / (this.numberPoints - 1) * 100\r\n\t\t\t\tlet cp = p - (1 / (this.numberPoints - 1) * 100) / 2\r\n\r\n\t\t\t\td += ` ${cp} ${point} ${cp} ${points[j+1]} ${p} ${points[j+1]}`\r\n\t\t\t\tj++\r\n\t\t\t}\r\n\r\n\t\t\td += this.isOpened ? ` V 100 H 0` : ` V 0 H 0`\r\n\t\t\tpath.setAttribute('d', d)\r\n\t\t})\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.tl.progress(0).clear()\r\n\r\n\t\tthis.pointsDelay = Array.from({ length: this.numberPoints }, () => Math.random() * this.delayPoints)\r\n\r\n\t\tfor (const [i, points] of this.allPoints.entries()) {\r\n\t\t\tconst pathDelay = this.delayPaths * (this.isOpened ? i : (this.numberPaths - i - 1))\r\n\r\n\t\t\tfor (const [j, delay] of this.pointsDelay.entries()) {\r\n\t\t\t\tthis.tl.to(points, {\r\n\t\t\t\t\t[j]: 0\r\n\t\t\t\t}, delay + pathDelay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tif (!this.tl.isActive()) {\r\n\t\t\tthis.isOpened = !this.isOpened\r\n\r\n\t\t\tthis.update()\r\n\t\t}\r\n\t}\r\n\r\n\tentry() {\r\n\t\tif (!this.tl.isActive()) {\r\n\t\t\tthis.isOpened = true\r\n\r\n\t\t\tthis.update()\r\n\t\t}\r\n\t}\r\n\r\n\tleave() {\r\n\t\tif (!this.tl.isActive()) {\r\n\t\t\tthis.isOpened = false\r\n\r\n\t\t\tthis.update()\r\n\t\t}\r\n\t}\r\n}"],"names":[],"version":3,"file":"index.module.js.map"}